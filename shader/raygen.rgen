#version 460
#extension GL_NV_ray_tracing : require

layout(set = 0, binding = 0) uniform accelerationStructureNV tlas;
layout(set = 0, binding = 1, rgba8) uniform writeonly image2D output_image;

layout (set = 1, binding = 0) uniform View {
    mat4 inv_proj;
    mat4 inv_view;
} view;

struct RayPayload {
	vec4 color;
	float distance;
};

layout(location = 0) rayPayloadNV RayPayload pay_load;

void main() {
    const vec2 pixel_center = vec2(gl_LaunchIDNV.xy) + vec2(0.5);
    const vec2 in_uv = pixel_center / vec2(gl_LaunchSizeNV.xy);
    vec2 d = in_uv * 2.0 - 1.0;

    vec4 origin = view.inv_view * vec4(0.0, 0.0, 0.0, 1.0);
    vec4 target = view.inv_proj * vec4(d.x, d.y, 1.0, 1.0);
    vec4 direction = view.inv_view * vec4(normalize(target.xyz), 0.0);

    vec3 color = vec3(0.0);

    // TODO: ray casting

    imageStore(output_image, ivec2(gl_LaunchIDNV.xy), vec4(color, 1.0));
}